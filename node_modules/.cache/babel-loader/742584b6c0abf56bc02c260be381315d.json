{"ast":null,"code":"var _jsxFileName = \"/Users/evik/JavaScript/React-January/typical-page/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useReducer } from \"react\";\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst emailReducer = (state, action) => {\n  if (action.type === \"USER_INPUT\") return {\n    value: action.val,\n    isValid: action.val.includes(\"@\")\n  };\n  if (action.type === \"INPUT_BLUR\") return {\n    value: state.value,\n    isValid: state.value.includes(\"@\")\n  };\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst passwordReducer = (state, action) => {\n  if (action.type === \"PASSWORD_INPUT\") return {\n    value: action.val,\n    isValid: action.val.trim().length > 6\n  };\n  if (action.type === \"INPUT_BLUR\") return {\n    value: state.value,\n    isValid: state.value.trim().length > 6\n  };\n  return {\n    value: \"\",\n    isValid: false\n  };\n};\n\nconst Login = props => {\n  _s();\n\n  //const [enteredEmail, setEnteredEmail] = useState(\"\");\n  //const [emailIsValid, setEmailIsValid] = useState();\n  // const [enteredPassword, setEnteredPassword] = useState(\"\");\n  // const [passwordIsValid, setPasswordIsValid] = useState();\n  const [formIsValid, setFormIsValid] = useState(false);\n  const [emailState, dispatchEmail] = useReducer(emailReducer, {\n    value: \"\",\n    isValid: null\n  });\n  const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n    value: \"\",\n    isValid: null\n  });\n  useEffect(() => {\n    const indentifier = setTimeout(() => {\n      setFormIsValid(emailState.isValid && passwordState);\n      return () => {\n        clearTimeout(indentifier);\n      };\n    }, 500);\n  }, [enteredEmail, enteredPassword]);\n\n  const emailChangeHandler = event => {\n    dispatchEmail({\n      type: \"USER_INPUT\",\n      val: event.target.value\n    }); // setFormIsValid(\n    //   event.target.value.includes(\"@\") && passwordState.isValid\n    // );\n  };\n\n  const passwordChangeHandler = event => {\n    //setEnteredPassword(event.target.value);\n    dispatchPassword({\n      type: \"PASSWORD_INPUT\",\n      val: event.target.value\n    });\n    setFormIsValid(emailState.isValid && event.target.value.trim().length > 6);\n  };\n\n  const validateEmailHandler = () => {\n    //setEmailIsValid(emailState.isValid);\n    dispatchEmail({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const validatePasswordHandler = () => {\n    //setPasswordIsValid(passwordState.isValid);\n    dispatchPassword({\n      type: \"INPUT_BLUR\"\n    });\n  };\n\n  const submitHandler = event => {\n    event.preventDefault();\n    props.onLogin(emailState.value, passwordState.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: classes.login,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submitHandler,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${emailState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"E-Mail\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          value: emailState.value,\n          onChange: emailChangeHandler,\n          onBlur: validateEmailHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `${classes.control} ${passwordState.isValid === false ? classes.invalid : \"\"}`,\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"password\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          value: passwordState.value,\n          onChange: passwordChangeHandler,\n          onBlur: validatePasswordHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.actions,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.btn,\n          disabled: !formIsValid,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"q/qu2a/gSFhBln5ctShwsgEqMo8=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/evik/JavaScript/React-January/typical-page/src/components/Login/Login.js"],"names":["React","useState","useEffect","useReducer","Card","classes","Button","emailReducer","state","action","type","value","val","isValid","includes","passwordReducer","trim","length","Login","props","formIsValid","setFormIsValid","emailState","dispatchEmail","passwordState","dispatchPassword","indentifier","setTimeout","clearTimeout","enteredEmail","enteredPassword","emailChangeHandler","event","target","passwordChangeHandler","validateEmailHandler","validatePasswordHandler","submitHandler","preventDefault","onLogin","login","control","invalid","actions","btn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useReducer } from \"react\";\n\nimport Card from \"../UI/Card/Card\";\nimport classes from \"./Login.module.css\";\nimport Button from \"../UI/Button/Button\";\n\nconst emailReducer = (state, action) => {\n    if (action.type === \"USER_INPUT\")\n        return { value: action.val, isValid: action.val.includes(\"@\") };\n    if (action.type === \"INPUT_BLUR\")\n        return { value: state.value, isValid: state.value.includes(\"@\") };\n    return { value: \"\", isValid: false };\n};\n\nconst passwordReducer = (state, action) => {\n    if (action.type === \"PASSWORD_INPUT\")\n        return { value: action.val, isValid: action.val.trim().length > 6 };\n    if (action.type === \"INPUT_BLUR\")\n        return { value: state.value, isValid: state.value.trim().length > 6 };\n    return { value: \"\", isValid: false };\n};\n\nconst Login = (props) => {\n    //const [enteredEmail, setEnteredEmail] = useState(\"\");\n    //const [emailIsValid, setEmailIsValid] = useState();\n    // const [enteredPassword, setEnteredPassword] = useState(\"\");\n    // const [passwordIsValid, setPasswordIsValid] = useState();\n    const [formIsValid, setFormIsValid] = useState(false);\n\n    const [emailState, dispatchEmail] = useReducer(emailReducer, {\n        value: \"\",\n        isValid: null,\n    });\n\n    const [passwordState, dispatchPassword] = useReducer(passwordReducer, {\n        value: \"\",\n        isValid: null,\n    });\n\n    useEffect(() => {\n     const indentifier = setTimeout(() => {\n    setFormIsValid(\n               emailState.isValid && passwordState\n          );\n         return () => {\n           clearTimeout(indentifier);\n        };\n      }, 500);\n    }, [enteredEmail, enteredPassword]);\n    const emailChangeHandler = (event) => {\n        dispatchEmail({ type: \"USER_INPUT\", val: event.target.value });\n       // setFormIsValid(\n         //   event.target.value.includes(\"@\") && passwordState.isValid\n       // );\n    };\n\n    const passwordChangeHandler = (event) => {\n        //setEnteredPassword(event.target.value);\n        dispatchPassword({ type: \"PASSWORD_INPUT\", val: event.target.value });\n        setFormIsValid(\n            emailState.isValid && event.target.value.trim().length > 6\n        );\n    };\n\n    const validateEmailHandler = () => {\n        //setEmailIsValid(emailState.isValid);\n        dispatchEmail({ type: \"INPUT_BLUR\" });\n    };\n\n    const validatePasswordHandler = () => {\n        //setPasswordIsValid(passwordState.isValid);\n        dispatchPassword({ type: \"INPUT_BLUR\" });\n    };\n\n    const submitHandler = (event) => {\n        event.preventDefault();\n        props.onLogin(emailState.value, passwordState.value);\n    };\n\n    return (\n        <Card className={classes.login}>\n            <form onSubmit={submitHandler}>\n                <div\n                    className={`${classes.control} ${\n                        emailState.isValid === false ? classes.invalid : \"\"\n                    }`}\n                >\n                    <label htmlFor=\"email\">E-Mail</label>\n                    <input\n                        type=\"email\"\n                        id=\"email\"\n                        value={emailState.value}\n                        onChange={emailChangeHandler}\n                        onBlur={validateEmailHandler}\n                    />\n                </div>\n                <div\n                    className={`${classes.control} ${\n                        passwordState.isValid === false ? classes.invalid : \"\"\n                    }`}\n                >\n                    <label htmlFor=\"password\">Password</label>\n                    <input\n                        type=\"password\"\n                        id=\"password\"\n                        value={passwordState.value}\n                        onChange={passwordChangeHandler}\n                        onBlur={validatePasswordHandler}\n                    />\n                </div>\n                <div className={classes.actions}>\n                    <Button\n                        type=\"submit\"\n                        className={classes.btn}\n                        disabled={!formIsValid}\n                    >\n                        Login\n                    </Button>\n                </div>\n            </form>\n        </Card>\n    );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}